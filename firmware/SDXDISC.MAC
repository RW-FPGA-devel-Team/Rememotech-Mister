TITLE	SDXDISC	FDX floppy disc driver

; This is an attempt to construct the equivelent of SDXFDSC.MAC
; (which drives the SDX FDC) which drives the FDX FDC instead.

.Z80
CSEG

	INCLUDE	SDXCONF.INC
	INCLUDE	SDXHIGH.INC
;
	IFT	FDXFDC
;
	IFT	DRVB03 OR DRVB07
;
	IFT	DRVF51 OR DRVF52
	EXT	ZINIT,ZCONFIG,ZREAD,ZWRITE
	ENDIF

;

SPEED	EQU	4		; 4=4MHz, 6=6MHz

PORTS	EQU	40H

WDCSP	EQU	PORTS
WDTRK	EQU	PORTS+1
WDSEC	EQU	PORTS+2
WDDATA	EQU	PORTS+3

SMCSP	EQU	PORTS+4
DVCGP	EQU	PORTS+5
DMALO	EQU	PORTS+6
DMAHI	EQU	PORTS+7

DSBITS	EQU	00000011B
DREBIT	EQU	00000100B
DBLBIT	EQU	00001000B
S58BIT	EQU	00010000B	; HIGH FOR 5" DRIVE
DMABIT	EQU	00100000B
RCYBIT	EQU	01000000B	; DISC WRITE WHEN HIGH
SSLBIT	EQU	10000000B

SRBITS	EQU	00000011B
TPIBIT	EQU	00000100B
DSDBIT	EQU	00001000B
INTBIT	EQU	00010000B
DRQBIT	EQU	00100000B
RY5BIT	EQU	01000000B
RY8BIT	EQU	10000000B
;
;
;
INITLZ::
	XOR	A
	LD	B,0FCH			; leave drive select unchanged
	CALL	RPLCE
	LD	A,0D0H			; terminate, not int
	OUT	(WDCSP),A		; terminate any FDC commands
	CALL	DELAY1
	XOR	A
	LD	HL,SWUF
	LD	(HL),A			; (SWUF)=0 => not waiting for data
	DEC	A
	LD	B,6
INILP:	INC	HL
	LD	(HL),A
	DJNZ	INILP
	OUT	(DVCGP),A		; drive change

	IFT	DRVF51 OR DRVF52
	CALL	ZINIT
	ENDIF

	RET
;
;
;
EXCNFG::

	IFT	DRVF51 OR DRVF52
	LD	A,(DRVRQ)
	CP	4
	JP	NC,ZCONFIG
	ENDIF

	PUSH	BC
	PUSH	DE
	LD	A,(CFGBYT)
	CP	0FFH
	JR	Z,CFGERR
	LD	A,(DRVRQ)
	AND	004H
	JR	Z,CFGSM
;
CFGERR:	CALL	CFGCHK
	LD	HL,00000H
	POP	DE
	POP	BC
	LD	A,001H
	AND	A
	RET
;
CFGSM:	CALL	DPBGET
	LD	A,H
	OR	L
	JR	Z,CFGERR
	PUSH	HL
	CALL	CTUPD
	POP	HL
	POP	DE
	POP	BC
	XOR	A
	RET
;
; Searches through PBASE for a match against CFGBYT
; If no match, HL=0, else HL<>0
;
DPBGET:	LD	A,(CFGBYT)
	LD	B,A
	CP	0FFH
NODPB:	LD	HL,0
	RET	Z
	LD	HL,PBASE
	LD	DE,15
DPBLP:	LD	A,(HL)
	CP	0FFH
	JP	Z,NODPB
	CP	B
	INC	HL
	RET	Z
	ADD	HL,DE
	JR	DPBLP
;
; Config table update
;
CTUPD:	LD	A,(DRVRQ)
	AND	007H
	LD	HL,CFGTAB
	LD	E,A
	LD	D,000H
	ADD	HL,DE
	LD	A,(CFGBYT)
	LD	(HL),A
	RET
;
; Store config byte for drive (DRVRQ) at (CFGBYT)
;
CFGCHK:	LD	HL,CFGTAB
	LD	A,(DRVRQ)
	AND	007H
	LD	E,A
	LD	D,000H
	ADD	HL,DE
	LD	A,(HL)
	LD	(CFGBYT),A
	CP	0FFH
	RET
;
; Read
;
EXRD::

	IFT	DRVF51 OR DRVF52
	LD	A,(DRVRQ)
	CP	4
	JP	NC,ZREAD
	ENDIF

	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	CFGCHK
	JR	Z,EEXIT
	LD	HL,EXIT
	PUSH	HL
	LD	A,(DRVRQ)
	AND	004H
	RET	NZ
	JP	RDSM
;
; Write
;
EXWR::

	IFT	DRVF51 OR DRVF52
	LD	A,(DRVRQ)
	CP	4
	JP	NC,ZWRITE
	ENDIF

	PUSH	BC
	PUSH	DE
	PUSH	HL
	CALL	CFGCHK
	JP	Z,EEXIT
	LD	HL,EXIT
	PUSH	HL
	LD	A,(DRVRQ)
	AND	004H
	RET	NZ
	PUSH	BC
	CALL	WRSM
	POP	BC
	RET	NZ
	DEC	C
	JP	Z,WTIDY
	RET
; drive is not configured
EEXIT:	LD	A,007H
;
; exit point for EXRD and EXWR
; returns A=0, Z, if operation successful
EXIT:	PUSH	AF
	XOR	A
	LD	B,DREBIT		; disable motor on
	CALL	RPLCE
	POP	AF
	AND	A
	POP	HL
	POP	DE
	POP	BC
	RET
;
; Block sector read routine
;
BLKRD::	PUSH	BC
	LD	B,10
BLKLP:	DEC	B
	JR	Z,BLKRE
	CALL	EXRD
	AND	A
	JR	NZ,BLKLP
	LD	HL,(DMARQ)
	LD	DE,00080H
	ADD	HL,DE
	LD	(DMARQ),HL
	LD	A,(SECRQ)
	INC	A
	CP	27
	CALL	Z,NTRK
	LD	(SECRQ),A
	POP	BC
	DJNZ	BLKRD
	XOR	A
	RET
;
BLKRE:	POP	BC
	LD	A,001H
	AND	A
	RET
;
; Next track
;
NTRK:	LD	A,(TRKRQ)
	INC	A
	LD	(TRKRQ),A
	LD	A,001H
	RET
;
; --- Intermediate disc rountines
;

;
; Sector read
;
RDSM:	CALL	WTIDY
	RET	NZ
	CALL	DDD
	JR	NZ,DRDSM
	JP	READSM
DRDSM:	CALL	NADITS
	CALL	NZ,PREAD
	RET	NZ
	CALL	TX1
	LD	HL,(DMARQ)
	EX	DE,HL
	CALL	QSIDE
	LD	HL,DBUF
	PUSH	DE
	LD	E,A
	LD	D,000H
	ADD	HL,DE
	POP	DE
	LD	BC,00080H
	LDIR
	XOR	A
	RET
;
; Sector write
;
WRSM:	CALL	DDD
	JP	NZ,DWRIT
	CALL	WTIDY
	RET	NZ
	CALL	WRITSM
	RET
DWRIT:	CALL	QSIDE
	JP	NZ,DWR2
	CALL	WTIDY
	RET	NZ
	LD	HL,(DMARQ)
	LD	DE,DBUF
	LD	BC,00080H
	LDIR
	CALL	TX1
	LD	A,0FFH
	LD	(SWUF),A
	INC	A
	RET
DWR2:	CALL	NADITS
	JP	Z,DWR3
	CALL	WTIDY
	RET	NZ
	CALL	PREAD
	RET	NZ
	CALL	TX1
DWR3:	LD	HL,(DMARQ)
	LD	DE,DBUF+00080H
	LD	BC,00080H
	PUSH	HL
	LDIR
	LD	HL,DBUF
	LD	(DMARQ),HL
	CALL	WRITSM
	POP	HL
	LD	(DMARQ),HL
	LD	(SWUF),A
	RET
;
PREAD:	LD	HL,(DMARQ)
	PUSH	HL
	LD	HL,DBUF
	LD	(DMARQ),HL
	CALL	READSM
	POP	HL
	LD	(DMARQ),HL
	RET
;
QSIDE:	LD	A,(SECRQ)
	RRA
	CCF
	LD	A,000H
	RRA
	OR	A
	RET
;
NADITS:	LD	HL,DRVRQ
	LD	DE,BFID
	LD	B,4
NADLP:	LD	A,(DE)
	CP	(HL)
	RET	NZ
	INC	HL
	INC	DE
	DEC	B
	JP	NZ,NADLP
	LD	A,(DE)
	DEC	A
	AND	0FEH
	LD	B,A
	LD	A,(HL)
	DEC	A
	AND	0FEH
	CP	B
	RET
;
TX1:	LD	HL,DRVRQ
	LD	DE,BFID
	LD	BC,6
	LDIR
	RET
;
WTIDY:	LD	A,(SWUF)
	OR	A
	RET	Z
	CALL	SWAP
	LD	DE,TDBUF
	LD	HL,DBUF
	LD	BC,00080H
	LDIR
	CALL	PREAD
	LD	DE,DBUF
	LD	HL,TDBUF
	LD	BC,00080H
	LDIR
	OR	A
	JP	NZ,WTY1
	LD	HL,DBUF
	LD	(DMARQ),HL
	CALL	WRITSM
	LD	(SWUF),A
WTY1:	PUSH	AF
	CALL	SWAP
	POP	AF
	RET
;
SWAP:	LD	HL,BFID
	LD	DE,DRVRQ
	LD	B,8
SWP1:	LD	C,(HL)
	LD	A,(DE)
	LD	(HL),A
	LD	A,C
	LD	(DE),A
	INC	DE
	INC	HL
	DEC	B
	JP	NZ,SWP1
	RET
;
DDD:	LD	A,(CFGBYT)
	AND	002H
	RET	Z
	CALL	D1213
	RET	NZ
	OR	A
	RET
;
; --- Hardware interface
;

.8080

READSM:	CALL	RWGO
	RNZ
	MVI	A,DMABIT
	MVI	B,DMABIT+RCYBIT
	CALL	RPLCE
	LDA	EFLAG
	ORI	10000000B	; READ COMMAND
	OUT	WDCSP
	CALL	WAIT1
	XRA	A
	MVI	B,DMABIT
	CALL	RPLCE
	IN	WDCSP
	ANI	10011100B	; POSSIBLE ERROR BITS
	RZ
RWEF:	STA	CFGBYT		; OVERLAY CFGBYT WITH ERROR MODE
	ANI	00010000B	; RNF ERROR
	CNZ	RCBRQ		; FF TO (PTRKP)
	MVI	A,6
	ORA	A
	RET

WRITSM:	CALL	RWGO
	RNZ
	MVI	A,DMABIT+RCYBIT
	MVI	B,DMABIT+RCYBIT
	CALL	RPLCE
	LDA	EFLAG
	ORI	10100000B	; READ COMMAND
	OUT	WDCSP
	CALL	WAIT1
	XRA	A
	MVI	B,DMABIT
	CALL	RPLCE
	IN	WDCSP
	ANI	11111100B	; POSSIBLE ERROR BITS
	JNZ	RWEF
	RET

RWGO::	CALL	DRVSET
	RNZ
	IN	WDTRK
	LHLD	PTRKP
	MOV	M,A		; UPDATE (PTRKP)
	LDA	LCA
	OUT	WDTRK
	CALL	WAIT3
	RNZ
	IN	SMCSP
	ANI	DRQBIT
	RET

RCBRQ:	LHLD	PTRKP
	MVI	M,255
	RET

DRVSET:	CALL	WAIT
	XRA	A
	STA	EFLAG
	LDA	DRVRQ
	ORI	DREBIT
	MVI	B,DSBITS+DREBIT
	CALL	RPLCE
	LDA	DRVRQ
	ANI	011B
	MOV	B,A
	LDA	CURDRV
	CPI	255
	JZ	SKIP1
	CMP	B
	JZ	SKIP1
	IN	WDTRK
	OUT	WDDATA
	MVI	A,00010000B	; SEEK HEAD UNLOADED
	OUT	WDCSP		; DE-LOAD HEAD
	CALL	WAIT1
	OUT	DVCGP		; TOGGLE 45 ON DRIVE CHANGES
SKIP1:	MOV	A,B
	STA	CURDRV
	MOV	E,A
	MVI	D,0
	LXI	H,TRACKS
	DAD	D
	SHLD	PTRKP
	MOV	A,M
	OUT	WDTRK
	LDA	CFGBYT
	ANI	01B		; TEST D/S STATUS
	JZ	SKIP2
	IN	SMCSP
	ANI	DSDBIT
	JZ	DRVSE5
SKIP2:	LDA	CFGBYT
	ANI	0100B		; TEST 96TPI STATUS
	JZ	SKIP3
	IN	SMCSP
	ANI	TPIBIT
	JZ	DRVSE5
SKIP3:	CALL	DDD
	MVI	A,0
	JZ	SKIP4
	DCR	A
SKIP4:	MVI	B,DBLBIT
	CALL	RPLCE
	LDA	CFGBYT
	CMA
	MVI	B,S58BIT
	CALL	RPLCE		; 5" WHEN HIGH
	IN	WDTRK
	CPI	255
	JNZ	SKIP6
	CALL	RECALB
	RNZ
	MVI	A,0100B		; "E" BIT
	STA	EFLAG
SKIP6:	LHLD	TRKRQ
	LDA	SECRQ
	MOV	E,A
	MVI	D,0
	MVI	A,26
	STA	SECMAX+1
	LDA	CFGBYT
	MOV	C,A
	ANI	00010000B	; CHECK 8" BIT
	CZ	CALC5
	MOV	A,C
	ANI	00000010B	; CHECK DDEN BIT
	CNZ	CALCD
	MOV	A,C
	ANI	00000001B	; CHECK SIDE BIT
	CNZ	CALCS
	MOV	A,L
	STA	LCA		; SETUP LCA
	MOV	A,C
	ANI	00000100B	; CHECK TPI BIT
	JNZ	SKIPC
	IN	SMCSP
	ANI	TPIBIT		; CHECK 96TPI DRIVE
	CNZ	CALCT
SKIPC:	MOV	A,D		; SIDE IN A
	MOV	D,L		; CYL  IN D
				; SEC  IN E
	RRC
	MVI	B,SSLBIT
	CALL	RPLCE
	MOV	A,E
	OUT	WDSEC
	LHLD	DMARQ
	MOV	A,L
	OUT	DMALO
	MOV	A,H
	OUT	DMAHI
	IN	WDTRK
	CMP	D
	MVI	A,0
	RZ
	MVI	A,0100B		; "E" BIT
	STA	EFLAG
	MOV	A,D
	OUT	WDDATA
SEEK:	MVI	A,00011000B
	JMP	SKTRK
RECALB:	MVI	A,00001000B
SKTRK:	MOV	B,A
	IN	SMCSP
	ANI	011B		; GET RATE VALUE
	ORA	B
	OUT	WDCSP
	CALL	WAIT1
	CALL	DELAY1		; MUST WAIT 54MICOSECS
	IN	WDCSP
	ANI	00010000B	; SEEK ERROR BIT
	RZ
	MVI	A,4
	RET

CALC5:	PUSH	D
	DAD	H	; *2
	PUSH	H
	DAD	H
	DAD	H	; *8
	PUSH	H
	DAD	H	; *16
	POP	D
	DAD	D
	POP	D
	DAD	D	; *26
	POP	D
	DAD	D
	DCX	H	; SECTOR OFFSET
	MOV	A,L
	ANI	1111B
	INR	A	; SECTOR OFFSET
	MOV	E,A	; NEW SECTOR
	CALL	CALDIV
	CALL	CALDIV
	CALL	CALDIV
	CALL	CALDIV	; HL=HL/16, NEW CYL
	MVI	A,16
	STA	SECMAX+1
	RET
CALCD:	CALL	D1213
	JNZ	CALD0
	ORA	A
	RZ
	INX	H
CALD0:	CALL	CALDIV
	MOV	A,E
	JNC	CALD1
SECMAX:	MVI	A,16
	ADD	E
CALD1:	DCR	A
	STC
	CMC
	RAR
	MOV	E,A
	INR	E
	RET
CALCS:	CALL	CALDIV
	RNC
	MVI	D,1
	RET
CALCT:	DAD	H
	RET
CALDIV:	STC
	CMC
	MOV	A,H
	RAR
	MOV	H,A
	MOV	A,L
	RAR
	MOV	L,A
	RET

D1213:	LDA	CFGBYT
	CPI	12H
	JZ	D12131
	CPI	13H
	RNZ
D12131:	PUSH	H
	LHLD	TRKRQ
	MOV	A,H
	ORA	L
	CMP	A		; SET ZERO
	POP	H
	RET

RPLCE:	ANA	B
	MOV	C,A
	MOV	A,B
	CMA
	MOV	B,A
	LDA	LSTOUTX
	ANA	B
	ORA	C
	STA	LSTOUTX
	OUT	SMCSP
	RET

DELAY1:	MVI	A,50
DELY11:	DCR	A
	JNZ	DELY11
	RET

WAIT:	CALL	DELAY1
	IN	WDCSP
	ANI	01B
	JNZ	WAIT
	RET

WAIT1:	CALL	DELAY1
	IN	SMCSP
	ANI	INTBIT
	JZ	WAIT1
	RET

WAIT3:	CALL	WAIT2
	RNZ
	LDA	CFGBYT
	ANI	00010000B
	IN	SMCSP
	JZ	DRVT5
	ANI	RY5BIT
	JNZ	SKIP5
DRVSE5:	MVI	A,5
	ORA	A
	RET
DRVT5:	ANI	RY8BIT
	JZ	DRVSE5
SKIP5:	XRA	A
	RET
WAIT2:	CALL	TEST
	CPI	1
	JZ	WSKIP
	ORA	A
	RET			; READY OR ERROR
WSKIP:	PUSH	B
	LXI	B,SPEED*3500	; 3 seconds
W2LOOP:	DCX	B
	MOV	A,B
	ORA	C
	JZ	W2TOUT
	CALL	DELAY1
	CALL	TEST
	CPI	1
	JZ	W2LOOP
	ORA	A
	JNZ	W2EXT		; ERROR
	LDA	TRUST
	ORA	A
	JZ	W2LOOP
	XRA	A
W2EXT:	POP	B
	RET
W2TOUT:	CALL	TEST
	POP	B
	ORA	A
	RET
TEST:	IN	SMCSP
	ANI	RY5BIT+RY8BIT
	JZ	TESTE3
	CPI	RY5BIT+RY8BIT
	MVI	A,1		; NOT READY, NO ERRORS
	RZ
	XRA	A
	RET
TESTE3:	MVI	A,3
	ORA	A
	RET

	ENDIF				; DRVB03 OR DRVB07

	ENDIF				; FDXFDC
;
END
